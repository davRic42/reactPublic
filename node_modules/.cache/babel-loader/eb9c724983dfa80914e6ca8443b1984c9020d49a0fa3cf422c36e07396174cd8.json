{"ast":null,"code":"var _jsxFileName = \"/home/desarrollo/Proyectos/prueba#2/front/src/components/tabla.js\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport React, { useState } from 'react';\nimport ButtonDel from './btndel';\nimport ButtonUp from './btnupd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Rows({\n  userId,\n  userName,\n  userCel,\n  onDelete,\n  onUpdate\n}) {\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: userId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: userName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: userCel\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: [/*#__PURE__*/_jsxDEV(ButtonDel, {\n        onClick: onDelete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ButtonUp, {\n        onClick: onUpdate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n}\n_c = Rows;\nexport default function Table({\n  rows\n}) {\n  _s();\n  const [alertState, setAlert] = useState(false);\n  const handleDelete = (useState, userId) => {\n    console.log(`usuario con el id '${userId}' eliminado`);\n  };\n  const handleUpdate = (userId, userCel, userName) => {\n    console.log(`id: ${userId} nombre: ${userName} celular: ${userCel}`);\n    const newUserName = window.prompt('Ingrese el nuevo nombre:', userName);\n    const newUserCel = window.prompt('Ingrese el nuevo celular:', userCel);\n    if (newUserName !== null && newUserCel !== null) {\n      console.log('Usuario actualizado con los siguientes datos:');\n      console.log(`Nuevo nombre: ${newUserName}`);\n      console.log(`Nuevo celular: ${newUserCel}`);\n      // Aquí podrías llamar a una función para enviar los datos actualizados al servidor, por ejemplo, mediante axios\n    } else {\n      console.log('El usuario canceló la operación de actualización.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid p-5 mt-3 w-70\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-hover\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        className: \"table-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          scope: \"col\",\n          children: \"id\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          scope: \"col\",\n          children: \"nombre\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          scope: \"col\",\n          children: \"telefono celular\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        className: \"table-secondary\",\n        children: rows.map((row, index) => /*#__PURE__*/_jsxDEV(Rows, {\n          userId: row.userId,\n          userName: row.userName,\n          userCel: row.userCel,\n          onDelete: () => handleDelete(row.stateRow, row.userId),\n          onUpdate: () => handleUpdate(row.userId, row.userCel, row.userName)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n_s(Table, \"KaAXxRy8HCsjsRf9mbmotaPyAbg=\");\n_c2 = Table;\nvar _c, _c2;\n$RefreshReg$(_c, \"Rows\");\n$RefreshReg$(_c2, \"Table\");","map":{"version":3,"names":["axios","React","useState","ButtonDel","ButtonUp","jsxDEV","_jsxDEV","Rows","userId","userName","userCel","onDelete","onUpdate","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","Table","rows","_s","alertState","setAlert","handleDelete","console","log","handleUpdate","newUserName","window","prompt","newUserCel","className","scope","map","row","index","stateRow","_c2","$RefreshReg$"],"sources":["/home/desarrollo/Proyectos/prueba#2/front/src/components/tabla.js"],"sourcesContent":["import axios from 'axios';\nimport React, { useState } from 'react';\nimport ButtonDel from './btndel';\nimport ButtonUp from './btnupd';\n\nexport function Rows({ userId, userName, userCel,onDelete,onUpdate }) {\n    return (\n        <tr>\n            <td>{userId}</td>\n            <td>{userName}</td>\n            <td>{userCel}</td>\n            <td>\n                <ButtonDel onClick={onDelete}/>\n                <br/>\n                <br/>\n                <ButtonUp onClick={onUpdate}/>\n            </td>\n        </tr>\n    );\n}\n\nexport default function Table({ rows }) {\n    const [alertState,setAlert]=useState(false);\n    const handleDelete=(useState,userId)=>{ \n\n        console.log(`usuario con el id '${userId}' eliminado`);\n    }\n\n    const handleUpdate = (userId, userCel, userName) => { \n        console.log(`id: ${userId} nombre: ${userName} celular: ${userCel}`);\n        const newUserName = window.prompt('Ingrese el nuevo nombre:', userName);\n        const newUserCel = window.prompt('Ingrese el nuevo celular:', userCel);\n        if (newUserName !== null && newUserCel !== null) {\n            console.log('Usuario actualizado con los siguientes datos:');\n            console.log(`Nuevo nombre: ${newUserName}`);\n            console.log(`Nuevo celular: ${newUserCel}`);\n            // Aquí podrías llamar a una función para enviar los datos actualizados al servidor, por ejemplo, mediante axios\n        } else {\n            console.log('El usuario canceló la operación de actualización.');\n        }\n    }\n    \n\n    return (\n        <div className=\"container-fluid p-5 mt-3 w-70\">\n            <table className=\"table table-hover\">\n                <thead className='table-info'>\n                    <th scope=\"col\">id</th>\n                    <th scope=\"col\">nombre</th>\n                    <th scope=\"col\">telefono celular</th>\n                    <th></th>\n                </thead>\n                <tbody className='table-secondary'>\n                    {rows.map((row, index) => (\n                        <Rows \n                        key={index} \n                        userId={row.userId} \n                        userName={row.userName} \n                        userCel={row.userCel}\n                        onDelete={() => handleDelete(\n                            row.stateRow,\n                            row.userId\n                            )} \n                        onUpdate={() => handleUpdate(\n                            row.userId,\n                            row.userCel,\n                            row.userName\n                            )}\n                        />\n                    ))}\n                </tbody>\n            </table>\n        </div>\n    );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}